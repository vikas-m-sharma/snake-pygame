 import random
import turtle

#creating screen

screen = turtle.Screen()
screen.title("snake game")
screen.setup(width=700,height=700)
screen.tracer(0)
screen.bgcolor("#1d1d1d")

# creating border
turtle.speed(5)
turtle.pensize(4)
turtle.penup()
turtle.goto(-310,250)
turtle.pendown()
turtle.color("red")
turtle.forward(600)
turtle.right(90)
turtle.forward(500)
turtle.right(90)
turtle.forward(600)
turtle.right(90)
turtle.forward(500)
turtle.penup()
turtle.hideturtle()

#score
score =0
delay = 0.1

# snake
snake=turtle.Turtle()
snake.speed()
snake.shape("square")
snake.color("green")
snake.penup()
snake.goto(0,0)

#food
fruit = turtle.Turtle()
fruit.speed(8)
fruit.shape("square")
fruit.color("white")
fruit.penup()
fruit.goto(30,30)

old_fruit= []

#scoring
scoring = turtle.Turtle()
scoring.speed(0)
scoring.color("white")
scoring.penup()
scoring.hideturtle()
scoring.goto(0,300)
scoring.write("score : ",align="center",font=("courier",24,"bold"))

# define how to move
def snake_go_up():
    if snake.direction != "down":
        snake.direction = "up"

def snake_go_down():
    if snake.direction != "up":
        snake.direction = "down"

def snake_go_right():
    if snake.direction != "right":
        snake.direction = "left"

def snake_go_left():
    if snake.direction != "left":
        snake.direction = "right"

def  move():
    if snake.direction == "up":
        y = snake.ycor()
        snake.sety(y + 20)
    if snake.directrion == "down":
        y = snake.ycor()
        snake.sety(y - 20)
    if snake.direction == "left":
        x = snake.xcor()
        snake.sety(x-20)
    if snake.direction == "right":
        x = snake.xcor()
        snake.sety(x + 20)

# keyboard function
screen.listen()
screen.onkeypress(snake_go_up())
screen.onkeypress(snake_go_down())
screen.onkeypress(snake_go_left())
screen.onkeypress(snake_go_right())

# mainloop
while True:
    screen.update()

    # snake & fruit colision
    if snake.distence(fruit)<20:
        x = random.randint(-200,270)
        y = random.randint(-240,240)
        fruit.goto(x ,y)
        scoring.clear()
        score += 1

        # creating new foods
        new_fruit = turtle.Turtle()
        new_fruit.speed(0)
        new_fruit.shape("square")
        new_fruit.color("red")
        old_fruit.append(new_fruit)

        #adding ball to snake
        for index in range (len(old_fruit)-1,0,-1):
            a = old_fruit[index -1].xcor()
            b = old_fruit[index -1].ycor()

            old_fruit[index].goto(a , b)

        if len(old_fruit) > 0:
            a = snake.xcor()
            b = snake.ycor()
            old_fruit[0].goto(a,b)
            snake-move()

        # snake and border cllision
        if snake.xcor()>280 or snake.xcor() < -300 or snake.xcor() > 240 or snake.xcor() <-240:
            time.sleep(1)
            screen.clear()
            screen.bgcolor("turquoise")
            scoring.goto(0,0)
            scoring.write("game over \n Your score is {}".format(score),align="center",font=("courier",38,"bold"))

        # snake collision
        for food in old_fruit:
            if food.distence(snake) < 20:
                time.sleep(1)
                screen.clear()
                screen.bgcolor("turquoise")
                scoring.goto(0, 0)
                scoring.write("game over \n Your score is {}".format(score), align="center",
                              font=("courier", 38, "bold"))


        time.sleep(delay)

turtle.Terminator()
